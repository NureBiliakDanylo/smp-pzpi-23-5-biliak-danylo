Харківський національний університет радіоелектроніки
Факультет комп’ютерних наук
Катедра програмної інженерії

ЗВІТ
з практичної роботи №1
з дисципліни «Скриптові мови програмування»

Виконав
ст. гр. ПЗПІ-23-5
Біляк Данило

Перевірив
ст. викладач катедри ПІ
Сокорчук Ігор Петрович

Харків 2025


1 ІСТОРІЯ ЗМІН
№	Дата	Версія звіту	Опис змін та виправлень
1	04.06.2025	0.1	Створено розділ «Завдання», «Опис виконаної роботи» та «Висновки»


2 ЗАВДАННЯ
Написатати Bash скрипт, який друкуватиме на екрані ялинку із
двох ярусів гілок, стовбура та шару снігу.

Наприклад таку:

     *  
    ###  
   *****  
  #######  
 *********  
    ###  
   *****  
  #######  
 *********  
    ###  
    ###  
***********  
Ялинка повинна бути симетричною.

Яруси гілок повинні утворювати правильні рівнобедрені трикутники у яких
сусідні рядки відрізняються на два символи та складаються почергово
або з символів «*» або з символів «#»

наприклад як такий:

    *  
   ###  
  *****  
 #######   
Ширина усіх ярусів гілок повинна бути на 2 символи вужча ніж ширина снігу.

Висота стовбура та товщина снігу мають бути завжди такі, як у прикладі.

Висота ялинки у рядках разом з шаром снігу та ширина шару снігу в символах
вказується скрипту в його параметрах при запуску.

Параметри скрипта повинні мати додатнє значення.

Вказані значення повинні округлятися до потрібних у меншу сторону.

Якщо за вказаними при запуску скрипта значеннями зобразити ялинку на екрані неможливо,
скрипт повинен вивести у потік помилок сповіщення про неправильне значення аргумента
і повернути відповідний результат у батьківський процес.

У скрипті потрібно обовʼязково використати такі конструкції:

if ... then ... fi  
while ... do ... done  
until ... do ... done  
for ... in .. do ... done  
for ((...)); do ... done  
У скрипті також потрібно використати функцію.  


3 ОПИС ВИКОНАНОЇ РОБОТИ
Для виконання завдання створюємо файл у стартовій директорії за допомогою
команди “touch”. Після створення використовуємо команду “nano” для
відкриття файлу у текстовому редакторі. Протягом виконання було розроблено
таку програму:
1. #!/bin/bash
2. if [ $# -ne 2 ]; then
3. echo "Помилка: потрібно передати два аргументи (висоту ялинки та
ширину шару снігу)" >&2
4. exit 1
5. fi
6. tree_height=$(( $1 / 1 ))
7. snow_width=$(( $2 / 1 ))
8. if [ "$tree_height" -le 6 ] || [ "$snow_width" -lt 5 ]; then
9. echo "Помилка: неможливо побудувати ялинку з такими параметрами."
>&2
10. exit 1
11. fi
У рядках 2-11 скрипт перевіряє, чи передано рівно два аргументи (висота
ялинки та ширина шару снігу). Якщо ні – виводить помилку і завершує скрипт.
Після цього присвоює змінним tree_height та snow_width передані аргументи.
Якщо висота ≤ 6 або ширина < 5 – виводить помилку і завершує скрипт.
12. print_tier() {
13. local tier_height=$1
14. local max_width=$2
15. local char1=$3
16. local char2=$4
17. i=0
18. while [ $i -lt $tier_height ]; do
19. local stars=$(( 1 + i * 2 ))
20. local spaces=$(( (max_width - stars) / 2 ))
21. if (( i % 2 == 0 )); then
22. char="$char1"
23. else
24. char="$char2"
25. fi
26. printf "%*s%s\n" "$spaces" "" "$(printf "$char%.0s" $(seq 1
$stars))"
27. i=$((i + 1))
28. done}
29. tier_height=$(( (tree_height - 3) / 2 ))
30. for t in 0 1; do
31. if (( t % 2 == 0 )); then
32. print_tier "$tier_height" "$snow_width" "*" "#"
33. else
34. print_tier "$tier_height" "$snow_width" "#" "*"
35. fi
36. done
3
У рядках 12-28 прописана функції print_tier, яка формує один рівень ялинки з
використанням символів char1 та char2, чергуючи їх по рядках. Нижче, у рядках
29-36, скрипт обчислює висоту одного рівня (tier_height) і двічі викликає
print_tier.
37. count=1
38. until [ $count -gt 2 ]; do
39. printf "%*s###\n" $(( (snow_width - 3) / 2 )) ""
40. count=$((count + 1))
41. done
42. for ((i = 0; i < snow_width; i++)); do
43. printf "*"
44. done
45. printf "\n"
46. exit 0
У рядках 36-41 цикл until створює дворядний стовбур шириною 3 символи,
вирівнюючи його по центру. У рядках 42-44 цикл for друкує нижній рядок із *,
створюючи основу снігу. Після чого скрипт завершується.


4 ВИСНОВКИ
Під час виконання практичної роботи я набув навичок створення Bash-скриптів. Я навчився використовувати текстовий редактор nano та основам
використання різних типів циклів у bash.

[ЗАХИЩЕНО ПІД ЧАС ЗАНЯТТЯ]
